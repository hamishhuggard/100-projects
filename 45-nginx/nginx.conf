# basic static web server
server {
    listen 80;
    server_name example.com;
    root /var/www/html; # path to directory of static files

    location / {
        try_files $uri $uri/ =404; # serves files directly or returns 404
    }
}

# reverse proxy with caching
server {
    listen 80;
    server_name example.com

    location / {
        proxy_pass http://localhost:3000; # forward to port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto scheme;

        # define a cache
        proxy_cache my_cache;
        proxy_cache_valid 200 1d; # cache valid responses for 1 day
        proxy_cache_methods GET HEAD; # cache get and head requests
    }

    # cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g
        inactive=60m use_temp_path=off;
}

# SSL configuration
server {
    listen 443 ssl;
    server_name example.com;
    root /var/www/html;

    ssl_certificate /etc/ssl/certs/example.com.crt; 
    ssl_certificate_key /etc/ssl/private/example.com.key; 

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';

    location / {
        try_files $uri $uri/ =404;
    }
}

# load balancing
upstream myapp {
    server backend1.example.com;
    server backend2.example.com;
}

server {
    listen 80;
    server_name example.com;

    location / {
        proxy_pass http://myapp;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# multiple domains
server {
    listen 80;
    server_name example1.com;
    root /var/www/example1;

    location / {
        try_files $uri $uri/ =404;
    }
}

server {
    listen 80;
    server_name example2.com;
    root /var/www/example2;

    location / {
        try_files $uri $uri/ =404
    }
}
